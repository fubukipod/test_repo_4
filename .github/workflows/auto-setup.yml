name: 🔥 Full Auto-Setup with PR Workflow for test_repo_-2

on:
  workflow_dispatch:
  pull_request:
    types: [opened, reopened]

jobs:
  ##########################################
  # 1. Create CODEOWNERS & PR Template via PR
  ##########################################
  init-files:
    name: 🛠 Create CODEOWNERS & PR Template (via PR)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT }}

      - name: Create required files
        run: |
          mkdir -p .github
          echo "*   @softservedata" > .github/CODEOWNERS
          cat <<'EOF' > .github/pull_request_template.md
          ## Describe your changes
          -

          ## Issue ticket number and link
          -

          ## Checklist before requesting a review
          - [ ] I have performed a self-review of my code
          - [ ] If it is a core feature, I have added thorough tests
          - [ ] Do we need to implement analytics?
          - [ ] Will this be part of a product update? If yes, describe briefly
          EOF

      - name: Commit changes to a new branch
        run: |
          git config user.email "actions@github.com"
          git config user.name "GitHub Actions"
          git remote set-url origin https://x-access-token:${{ secrets.PAT }}@github.com/fubukipod/test_repo_-2
          BRANCH=auto-setup-bot-templates-$(date +%s)
          git checkout -b $BRANCH
          git add .github/CODEOWNERS .github/pull_request_template.md
          git commit -m "Automated: Added CODEOWNERS & PR template" || echo "No changes"
          git push origin $BRANCH
          echo "branch=$BRANCH" >> $GITHUB_ENV

      - name: Open PR for templates
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.PAT }}
          branch: ${{ env.branch }}
          base: main
          title: "Automated: Add CODEOWNERS & PR Template"
          body: |
            This PR was automatically created to add CODEOWNERS and PR template.

  ##########################################
  # 2. Invite collaborator
  ##########################################
  invite-collaborator:
    name: 🤝 Invite softservedata
    runs-on: ubuntu-latest
    needs: init-files
    steps:
      - name: Send collaborator invite
        uses: octokit/request-action@v2.x
        with:
          route: PUT /repos/fubukipod/test_repo_-2/collaborators/softservedata
          data: '{"permission":"push"}'
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}

  ##########################################
  # 3. Ensure develop branch exists via PR
  ##########################################
  create-develop:
    name: 🌱 Ensure develop branch (via PR)
    runs-on: ubuntu-latest
    needs: invite-collaborator
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT }}

      - name: Create develop branch
        run: |
          git remote set-url origin https://x-access-token:${{ secrets.PAT }}@github.com/fubukipod/test_repo_-2
          if ! git ls-remote --heads https://x-access-token:${{ secrets.PAT }}@github.com/fubukipod/test_repo_-2 develop | grep develop; then
            BRANCH=auto-setup-bot-develop-$(date +%s)
            git checkout -b $BRANCH
            echo "# Develop branch initialized" > DEVELOP_INIT.md
            git add DEVELOP_INIT.md
            git commit -m "Automated: Initialize develop branch"
            git push origin $BRANCH
            echo "branch=$BRANCH" >> $GITHUB_ENV
          else
            echo "Develop branch already exists." && echo "branch=develop" >> $GITHUB_ENV
          fi

      - name: Open PR to create develop
        if: env.branch != 'develop'
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.PAT }}
          branch: ${{ env.branch }}
          base: main
          title: "Automated: Create develop branch"
          body: |
            This PR was automatically created to initialize the develop branch.

  ##########################################
  # 4. Apply branch protection rules
  ##########################################
  branch-protection:
    name: 🔒 Apply Branch Protection Rules
    runs-on: ubuntu-latest
    needs: create-develop
    steps:
      - name: Protect main (1 approval)
        uses: octokit/request-action@v2.x
        with:
          route: PUT /repos/fubukipod/test_repo_-2/branches/main/protection
          mediaType: '{"previews": ["luke-cage"]}'
          data: |
            required_pull_request_reviews:
              required_approving_review_count: 1
            enforce_admins: true
            restrictions: null
            required_status_checks: null
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}

      - name: Protect develop (2 approvals)
        uses: octokit/request-action@v2.x
        with:
          route: PUT /repos/fubukipod/test_repo_-2/branches/develop/protection
          mediaType: '{"previews": ["luke-cage"]}'
          data: |
            required_pull_request_reviews:
              required_approving_review_count: 2
            enforce_admins: true
            restrictions: null
            required_status_checks: null
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}

  ##########################################
  # 5. Add Deploy Key (no branch modification, direct)
  ##########################################
  add-deploy-key:
    name: 🔑 Add Deploy Key
    runs-on: ubuntu-latest
    needs: branch-protection
    steps:
      - name: Generate key
        run: |
          ssh-keygen -t rsa -b 4096 -C "deploy_key" -f deploy_key -N ""
          echo "PRIVATE_KEY<<EOF" >> $GITHUB_ENV
          cat deploy_key >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Upload key
        uses: octokit/request-action@v2.x
        with:
          route: POST /repos/fubukipod/test_repo_-2/keys
          data: |
            {
              "title": "DEPLOY_KEY",
              "key": "$(cat deploy_key.pub)",
              "read_only": false
            }
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}

  ##########################################
  # 6. Create GitHub project board
  ##########################################
  create-project:
    name: 📋 Create Project Board
    runs-on: ubuntu-latest
    needs: add-deploy-key
    steps:
      - name: Create project
        uses: octokit/request-action@v2.x
        with:
          route: POST /repos/fubukipod/test_repo_-2/projects
          mediaType: '{"previews": ["inertia"]}'
          data: '{"name":"Automated Project","body":"Board created by GitHub Action"}'
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}

  ##########################################
  # 7. Notify Discord on PR creation
  ##########################################
  notify-discord:
    name: 📢 Discord PR Notification
    runs-on: ubuntu-latest
    needs: create-project
    steps:
      - name: Send Discord Message
        uses: Ilshidur/action-discord@master
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          message: |
            🚀 **New PR in test_repo_-2**
            🔹 Title: ${{ github.event.pull_request.title }}
            👤 Author: ${{ github.actor }}
            🔗 Link: ${{ github.event.pull_request.html_url }}
